C51 COMPILER V9.60.7.0   RFID_ATTENDANCE                                                   10/19/2025 00:24:15 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE RFID_ATTENDANCE
OBJECT MODULE PLACED IN .\Objects\rfid-attendance.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE rfid-attendance.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\rfid-attendance.lst) TABS(2) OBJECT(.\Objects\rfid-attendance.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <string.h>
   3          
   4          // LCD Connections
   5          sbit RS = P3^2;
   6          sbit EN = P3^3;
   7          #define LCD_DATA P2
   8          
   9          // Function prototypes
  10          void LCD_Command(unsigned char cmd);
  11          void LCD_Char(unsigned char dat);
  12          void LCD_Init(void);
  13          void LCD_String(const char *str);
  14          void LCD_Clear(void);
  15          void delay_ms(unsigned int ms);
  16          
  17          void UART_Init(void);
  18          unsigned char UART_Read(void);
  19          void UART_Write(char c);
  20          void UART_String(const char *str);
  21          
  22          void checkStudent(const char *cardID);
  23          
  24          // Use code memory for large strings (PROGMEM)
  25          code char student1_ID[] = "310004A7C250";  // Card 1
  26          code char student2_ID[] = "4E00754D2553";  // Card 2
  27          code char student3_ID[] = "310004FAF03F";  // Card 3
  28          code char student4_ID[] = "310004A752C0";  // Card 4
  29          
  30          code char student1_name[] = "Radhika";
  31          code char student2_name[] = "Sahil";
  32          code char student3_name[] = "Arjun";
  33          code char student4_name[] = "Priya";
  34          
  35          //---------------- LCD Functions ----------------//
  36          void LCD_Command(unsigned char cmd) {
  37   1          RS = 0;
  38   1          // High nibble
  39   1          LCD_DATA = (LCD_DATA & 0x0F) | (cmd & 0xF0);
  40   1          EN = 1; delay_ms(2); EN = 0; delay_ms(2);
  41   1          // Low nibble
  42   1          LCD_DATA = (LCD_DATA & 0x0F) | ((cmd << 4) & 0xF0);
  43   1          EN = 1; delay_ms(2); EN = 0; delay_ms(2);
  44   1      }
  45          
  46          void LCD_Char(unsigned char dat) {
  47   1          RS = 1;
  48   1          // High nibble
  49   1          LCD_DATA = (LCD_DATA & 0x0F) | (dat & 0xF0);
  50   1          EN = 1; delay_ms(2); EN = 0; delay_ms(2);
  51   1          // Low nibble
  52   1          LCD_DATA = (LCD_DATA & 0x0F) | ((dat << 4) & 0xF0);
  53   1          EN = 1; delay_ms(2); EN = 0; delay_ms(2);
  54   1      }
C51 COMPILER V9.60.7.0   RFID_ATTENDANCE                                                   10/19/2025 00:24:15 PAGE 2   

  55          
  56          void LCD_Init(void) {
  57   1          delay_ms(50);
  58   1          LCD_Command(0x02); // Return home
  59   1          LCD_Command(0x28); // 4-bit, 2-line
  60   1          LCD_Command(0x0C); // Display on, cursor off
  61   1          LCD_Command(0x06); // Increment cursor
  62   1          LCD_Command(0x01); // Clear display
  63   1          delay_ms(5);
  64   1      }
  65          
  66          void LCD_String(const char *str) {
  67   1          while(*str) {
  68   2              LCD_Char(*str++);
  69   2          }
  70   1      }
  71          
  72          void LCD_Clear(void) {
  73   1          LCD_Command(0x01);
  74   1          delay_ms(5);
  75   1      }
  76          
  77          //---------------- UART Functions ----------------//
  78          void UART_Init(void) {
  79   1          TMOD = 0x20;    // Timer1, Mode2
  80   1          TH1 = 0xFD;     // 9600 baud @ 11.0592 MHz
  81   1          SCON = 0x50;    // 8-bit UART, REN enabled
  82   1          TR1 = 1;        // Start Timer1
  83   1      }
  84          
  85          unsigned char UART_Read(void) {
  86   1          while(RI == 0);
  87   1          RI = 0;
  88   1          return SBUF;
  89   1      }
  90          
  91          void UART_Write(char c) {
  92   1          SBUF = c;
  93   1          while(TI == 0);
  94   1          TI = 0;
  95   1      }
  96          
  97          void UART_String(const char *str) {
  98   1          while(*str) {
  99   2              UART_Write(*str++);
 100   2          }
 101   1      }
 102          
 103          //---------------- Delay ----------------//
 104          void delay_ms(unsigned int ms) {
 105   1          unsigned int i, j;
 106   1          for(i=0; i<ms; i++)
 107   1              for(j=0; j<123; j++);
 108   1      }
 109          
 110          // Custom string comparison for code memory strings
 111          bit strcmp_code(const char *ram_str, const char *code_str) {
 112   1          while(*ram_str && *code_str) {
 113   2              if(*ram_str != *code_str)
 114   2                  return 0;
 115   2              ram_str++;
 116   2              code_str++;
C51 COMPILER V9.60.7.0   RFID_ATTENDANCE                                                   10/19/2025 00:24:15 PAGE 3   

 117   2          }
 118   1          return (*ram_str == *code_str);
 119   1      }
 120          
 121          //---------------- Check Student ----------------//
 122          void checkStudent(const char *cardID) {
 123   1          LCD_Clear();
 124   1          
 125   1          if(strcmp_code(cardID, student1_ID)) {
 126   2              LCD_String(student1_name);
 127   2              LCD_Command(0xC0);
 128   2              LCD_String("Present");
 129   2              UART_String(student1_name);
 130   2              UART_String(" - Present\r\n");
 131   2          }
 132   1          else if(strcmp_code(cardID, student2_ID)) {
 133   2              LCD_String(student2_name);
 134   2              LCD_Command(0xC0);
 135   2              LCD_String("Present");
 136   2              UART_String(student2_name);
 137   2              UART_String(" - Present\r\n");
 138   2          }
 139   1          else if(strcmp_code(cardID, student3_ID)) {
 140   2              LCD_String(student3_name);
 141   2              LCD_Command(0xC0);
 142   2              LCD_String("Present");
 143   2              UART_String(student3_name);
 144   2              UART_String(" - Present\r\n");
 145   2          }
 146   1          else if(strcmp_code(cardID, student4_ID)) {
 147   2              LCD_String(student4_name);
 148   2              LCD_Command(0xC0);
 149   2              LCD_String("Present");
 150   2              UART_String(student4_name);
 151   2              UART_String(" - Present\r\n");
 152   2          }
 153   1          else {
 154   2              LCD_String("Invalid Card");
 155   2              LCD_Command(0xC0);
 156   2              LCD_String("Try Again");
 157   2              UART_String("Unknown - Invalid\r\n");
 158   2          }
 159   1          delay_ms(3000);
 160   1          LCD_Clear();
 161   1          LCD_String("Scan Your Card");
 162   1      }
 163          
 164          //---------------- Main ----------------//
 165          void main(void) {
 166   1          unsigned char i;
 167   1          char rfid_id[13];
 168   1          
 169   1          LCD_Init();
 170   1          UART_Init();
 171   1      
 172   1          LCD_String("Attendance System");
 173   1          LCD_Command(0xC0);
 174   1          LCD_String("Initializing...");
 175   1          delay_ms(2000);
 176   1      
 177   1          while(1) {
 178   2              LCD_Clear();
C51 COMPILER V9.60.7.0   RFID_ATTENDANCE                                                   10/19/2025 00:24:15 PAGE 4   

 179   2              LCD_String("Scan Your Card");
 180   2              
 181   2              // Clear UART buffer
 182   2              while(RI) {
 183   3                  RI = 0;
 184   3                  SBUF;
*** WARNING C275 IN LINE 184 OF rfid-attendance.c: expression with possibly no effect
 185   3              }
 186   2              
 187   2              // Read 12 characters
 188   2              for(i = 0; i < 12; i++) {
 189   3                  rfid_id[i] = UART_Read();
 190   3              }
 191   2              rfid_id[12] = '\0';
 192   2              
 193   2              checkStudent(rfid_id);
 194   2              
 195   2              // Add delay to prevent rapid multiple reads
 196   2              delay_ms(1000);
 197   2          }
 198   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    669    ----
   CONSTANT SIZE    =    191    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      30
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
